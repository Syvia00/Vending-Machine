/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

javafx {
    version = '19'
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

repositories {
    mavenCentral()
}


dependencies {
//    implementation 'org.openjfx:javafx-controls:18'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.0'
    implementation 'org.json:json:20220924'
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

application {
    // Define the main class for the application.
    mainClass = 'vending.Main'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    test.finalizedBy jacocoTestReport // <- add this line
}

jacocoTestReport {
    reports {
        html.enabled = true
        csv.enabled = true
        xml.enabled = true
        html.destination file("${buildDir}/<custom_directory>");
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/baeldung/**/ExcludedPOJO.class",
                    "com/baeldung/**/*DTO.*",
                    "**/config/*"
            ])
        }))
    }
}

test {
    useJUnitPlatform()
    test.finalizedBy jacocoTestReport // <- add this line
}
